// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"

	"github.com/shantanubansal/go-swagger-demo/3.0/gen/restapi/operations/v1"
)

// V1CloudConfigAwsHandlerFunc turns a function with the right signature into a v1 cloud config aws handler
type V1CloudConfigAwsHandlerFunc func(V1CloudConfigAwsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn V1CloudConfigAwsHandlerFunc) Handle(params V1CloudConfigAwsParams) middleware.Responder {
	return fn(params)
}

// V1CloudConfigAwsHandler interface for that can handle valid v1 cloud config aws params
type V1CloudConfigAwsHandler interface {
	Handle(V1CloudConfigAwsParams) middleware.Responder
}

// NewV1CloudConfigAws creates a new http.Handler for the v1 cloud config aws operation
func NewV1CloudConfigAws(ctx *middleware.Context, handler V1CloudConfigAwsHandler) *V1CloudConfigAws {
	return &V1CloudConfigAws{Context: ctx, Handler: handler}
}

/*V1CloudConfigAws swagger:route GET /v1/cloudconfig/aws v1 v1CloudConfigAws

Returns the specified cluster cloud config

*/
type V1CloudConfigAws struct {
	Context *middleware.Context
	Handler V1CloudConfigAwsHandler
}

func (o *V1CloudConfigAws) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewV1CloudConfigAwsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
