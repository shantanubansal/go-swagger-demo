consumes:
    - application/json
produces:
    - application/json
schemes:
    - http
swagger: "2.0"
info:
    version: 1.0.0
    description: This is a Demo Project to demonstrate the usage of go-swagger with version
    title: SwagApi
paths:
    /v1/cluster/overview:
        get:
            tags:
                - v1
            operationId: v1ClusterOverview
            responses:
                "200":
                    description: An array of component event items
                    schema:
                        $ref: '#/definitions/v1ClusterOverviewEntity'
    /v1/system/health/ping:
        get:
            tags:
                - v1
                - private
            summary: Ping Service
            operationId: V1SystemHealthPing
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: '#/definitions/v1SystemHealthPing'
            description: Ping Service
    /v1/userinfo:
        get:
            summary: Returns the userinfo
            operationId: v1UserInfo
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: '#/definitions/v1UserInfo'
            description: Authenticates the user
            tags:
                - v1
    /v1/authenticate:
        post:
            description: Authenticates the user
            tags:
                - v1
            summary: Authenticates the user for the specified credentials
            operationId: v1Authenticate
            parameters:
                - type: boolean
                  default: true
                  name: setCookie
                  in: query
                - schema:
                    $ref: '#/definitions/v1AuthLogin'
                  name: body
                  in: body
                  required: true
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: '#/definitions/v1UserToken'
    /v1/cloudconfig/aws:
        get:
            tags:
                - v1
            summary: Returns the specified cluster cloud config
            operationId: v1CloudConfigAws
            responses:
                "200":
                    description: An spectro cluster cloudconfig
                    schema:
                        $ref: '#/definitions/v1EksCloudConfig'
    /v1/cluster/dashboard:
        get:
            responses:
                "200":
                    description: An spectro cluster summary
                    schema:
                        $ref: '#/definitions/v1ClusterSummary'
            tags:
                - v1
            summary: Returns the specified cluster summary
            operationId: v1ClusterDashboard
    /v1/cluster/events:
        get:
            tags:
                - v1
            operationId: v1ClusterEvents
            responses:
                "200":
                    description: An array of component event items
                    schema:
                        $ref: '#/definitions/v1ClusterEvents'
definitions:
    l8:
        properties:
            arr:
                $ref: '#/definitions/arrSpec'
            l7:
                $ref: '#/definitions/l8'
            name:
                type: string
        description: Auth token response
        type: object
    v1ApiEndpoint:
        required:
            - host
            - port
        properties:
            port:
                description: The port on which the API server is serving.
                type: integer
                format: int32
            host:
                type: string
                description: The hostname on which the API server is serving.
        description: APIEndpoint represents a reachable Kubernetes API endpoint.
        type: object
    v1AuthLogin:
        type: object
        properties:
            password:
                type: string
                format: password
            username:
                type: string
    v1EksMachinePoolConfig:
        type: object
        required:
            - isControlPlane
        properties:
            useControlPlaneAsWorker:
                description: if IsControlPlane==true && useControlPlaneAsWorker==true, then will remove master taint this will not be used for worker pools
                type: boolean
                x-omitempty: false
            azs:
                description: AZs is only used for dynamic placement
                type: array
                items:
                    type: string
            subnetIds:
                description: AZ to subnet mapping filled by ally from hubble SubnetIDs ["us-west-2d"] = "subnet-079b6061" This field is optional If we don't provide a subnetId then by default the first private subnet from the AZ will be picked up for deployment
                type: object
                additionalProperties:
                    type: string
            labels:
                type: array
                items:
                    type: string
                description: 'labels for this pool, example: master/worker, gpu, windows'
            machines:
                type: array
                items:
                    $ref: '#/definitions/v1AwsMachine'
            name:
                type: string
            rootDeviceSize:
                description: rootDeviceSize in GBs
                type: integer
                format: int64
            size:
                description: size of the pool, number of machines
                type: integer
                format: int32
            updateStrategy:
                $ref: '#/definitions/v1UpdateStrategy'
            additionalLabels:
                description: additionalLabels
                type: object
                additionalProperties:
                    type: string
            additionalTags:
                description: AdditionalTags is an optional set of tags to add to resources managed by the provider, in addition to the ones added by default. For eg., tags for EKS nodeGroup or EKS NodegroupIAMRole
                type: object
                additionalProperties:
                    type: string
            infraProfileRef:
                $ref: '#/definitions/v1ObjectReference'
            instanceType:
                description: instance type
                type: string
            isControlPlane:
                description: whether this pool is for control plane
                type: boolean
                x-omitempty: false
            maxSize:
                type: integer
                format: int32
                description: max size of the pool, for scaling
            minSize:
                description: min size of the pool, for scaling
                type: integer
                format: int32
            spotMarketOptions:
                $ref: '#/definitions/v1SpotMarketOptions'
            taints:
                description: master or worker taints
                type: array
                uniqueItems: true
                items:
                    $ref: '#/definitions/v1Taint'
            capacityType:
                description: EC2 instance capacity type
                type: string
                default: on-demand
                enum:
                    - on-demand
                    - spot
            infraProfileTemplate:
                $ref: '#/definitions/v1ClusterProfileTemplate'
    v1ResourceCost:
        type: object
        properties:
            cloud:
                $ref: '#/definitions/v1CloudCost'
            total:
                type: number
                format: float64
                x-omitempty: false
        description: Resource Cost information
    v1SpectroClusterHealthStatus:
        description: Spectro cluster health status
        properties:
            agentVersion:
                type: string
            conditions:
                items:
                    $ref: '#/definitions/v1SpectroClusterHealthCondition'
                type: array
                uniqueItems: true
            lastHeartBeatTimestamp:
                $ref: '#/definitions/v1Time'
            state:
                type: string
    v1SpectroClusterUidStatusSummary:
        description: Spectro cluster status summary
        properties:
            spcApply:
                $ref: '#/definitions/v1SpcApply'
            workspaces:
                type: array
                items:
                    $ref: '#/definitions/v1ResourceReference'
            apiEndpoints:
                type: array
                items:
                    $ref: '#/definitions/v1ApiEndpoint'
            hourlyRate:
                $ref: '#/definitions/v1ResourceCost'
            kubeMeta:
                $ref: '#/definitions/v1KubeMeta'
            location:
                $ref: '#/definitions/v1ClusterMetaSpecLocation'
            nested:
                $ref: '#/definitions/v1Nested'
            clusterImport:
                $ref: '#/definitions/v1ClusterImport'
            health:
                $ref: '#/definitions/v1SpectroClusterHealthStatus'
            state:
                type: string
                description: current operational state
            upgrades:
                type: array
                items:
                    $ref: '#/definitions/v1Upgrades'
            cost:
                $ref: '#/definitions/v1ResourceCost'
            metrics:
                $ref: '#/definitions/v1SpectroClusterMetrics'
            packs:
                items:
                    $ref: '#/definitions/v1ClusterPackStatus'
                type: array
            services:
                type: array
                items:
                    $ref: '#/definitions/v1LoadBalancerService'
            abortTimestamp:
                $ref: '#/definitions/v1Time'
            addOnServices:
                type: array
                items:
                    $ref: '#/definitions/v1SpectroClusterAddOnServiceSummary'
            conditions:
                type: array
                items:
                    $ref: '#/definitions/v1ClusterCondition'
    l2:
        description: Auth token response
        type: object
        properties:
            arr:
                $ref: '#/definitions/arrSpec'
            l3:
                $ref: '#/definitions/l3'
            name:
                type: string
    v1ServicePort:
        type: object
        required:
            - port
        properties:
            port:
                description: The port that will be exposed by this service.
                type: integer
                format: int32
            protocol:
                type: string
    v1UserInfo:
        description: Auth token response
        type: object
        properties:
            metadata:
                $ref: '#/definitions/metadata'
            spec:
                $ref: '#/definitions/spec'
            status:
                $ref: '#/definitions/status'
    v1ClusterCondition:
        type: object
        required:
            - type
            - status
        properties:
            lastProbeTime:
                $ref: '#/definitions/v1Time'
            lastTransitionTime:
                $ref: '#/definitions/v1Time'
            message:
                description: Human-readable message indicating details about last transition.
                type: string
            reason:
                description: Unique, one-word, CamelCase reason for the condition's last transition.
                type: string
            status:
                type: string
            type:
                type: string
    v1ClusterOverviewEntity:
        type: object
        properties:
            name:
                type: string
            uid:
                type: string
    v1ClusterPackManifestStatus:
        type: object
        properties:
            uid:
                type: string
            condition:
                $ref: '#/definitions/v1ClusterCondition'
            name:
                type: string
    v1EksAddon:
        description: EksAddon represents a EKS addon
        type: object
        required:
            - name
            - version
        properties:
            conflictResolution:
                description: ConflictResolution is used to declare what should happen if there are parameter conflicts.
                type: string
            name:
                description: Name is the name of the addon
                type: string
            serviceAccountRoleARN:
                type: string
                description: ServiceAccountRoleArn is the ARN of an IAM role to bind to the addons service account
            version:
                description: Version is the version of the addon to use
                type: string
    v1Nested:
        properties:
            hostCluster:
                $ref: '#/definitions/v1ObjectReference'
            nestedClusters:
                description: list of nested clusters deployed on the cluster
                type: array
                items:
                    $ref: '#/definitions/v1ObjectReference'
            state:
                description: cluster nested host status
                type: string
    v1SpectroClusterMetrics:
        description: Spectro cluster metrics
        properties:
            cpu:
                $ref: '#/definitions/v1ComputeMetrics'
            memory:
                $ref: '#/definitions/v1ComputeMetrics'
    v1SpotMarketOptions:
        description: SpotMarketOptions defines the options available to a user when configuring Machines to run on Spot instances. Most users should provide an empty struct.
        type: object
        properties:
            maxPrice:
                description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                type: string
    v1ClusterEvents:
        type: object
        required:
            - items
        properties:
            listmeta:
                $ref: '#/definitions/v1ListMetaData'
            items:
                type: array
                uniqueItems: true
                items:
                    $ref: '#/definitions/v1Event'
    v1RelatedObject:
        description: The object for which the event is related
        type: object
        properties:
            kind:
                type: string
                enum:
                    - spectrocluster
                    - machine
                    - cloudconfig
                    - clusterprofile
                    - pack
            name:
                type: string
            uid:
                type: string
    v1UpdateStrategy:
        properties:
            type:
                type: string
                enum:
                    - RollingUpdateScaleOut
                    - RollingUpdateScaleIn
                description: update strategy, either ScaleOut or ScaleIn if empty, will default to RollingUpdateScaleOut
        description: UpdatesStrategy will be used to translate to RollingUpdateStrategy of a MachineDeployment We'll start with default values for the translation, can expose more details later Following is details of parameters translated from the type ScaleOut => maxSurge=1, maxUnavailable=0 ScaleIn => maxSurge=0, maxUnavailable=1
        type: object
    l5:
        type: object
        properties:
            arr:
                $ref: '#/definitions/arrSpec'
            l6:
                $ref: '#/definitions/l6'
            name:
                type: string
        description: Auth token response
    l6:
        description: Auth token response
        type: object
        properties:
            name:
                type: string
            arr:
                $ref: '#/definitions/arrSpec'
            l7:
                $ref: '#/definitions/l7'
    l7:
        properties:
            name:
                type: string
            arr:
                $ref: '#/definitions/arrSpec'
            l8:
                $ref: '#/definitions/l8'
        description: Auth token response
        type: object
    v1AwsMachineSpec:
        description: AWS cloud VM definition spec
        type: object
        required:
            - instanceType
            - vpcId
            - ami
        properties:
            dnsName:
                type: string
            iamProfile:
                type: string
            instanceType:
                type: string
            sshKeyName:
                type: string
            vpcId:
                type: string
            ami:
                type: string
            az:
                type: string
            nics:
                type: array
                items:
                    $ref: '#/definitions/v1AwsNic'
            phase:
                type: string
            subnetId:
                type: string
            type:
                type: string
    v1EncryptionConfig:
        description: EncryptionConfig specifies the encryption configuration for the EKS clsuter.
        type: object
        properties:
            isEnabled:
                description: Is encryption configuration enabled for the cluster
                type: boolean
            provider:
                description: Provider specifies the ARN or alias of the CMK (in AWS KMS)
                type: string
            resources:
                description: Resources specifies the resources to be encrypted
                type: array
                items:
                    type: string
    l4:
        description: Auth token response
        type: object
        properties:
            arr:
                $ref: '#/definitions/arrSpec'
            l5:
                $ref: '#/definitions/l5'
            name:
                type: string
    v1AwsMachine:
        description: AWS cloud VM definition
        properties:
            status:
                $ref: '#/definitions/v1CloudMachineStatus'
            apiVersion:
                type: string
            kind:
                type: string
            metadata:
                $ref: '#/definitions/v1ObjectMeta'
            spec:
                $ref: '#/definitions/v1AwsMachineSpec'
    v1ClusterSummary:
        description: Spectro cluster summary
        type: object
        properties:
            metadata:
                $ref: '#/definitions/v1ObjectMeta'
            spec:
                description: Spectro cluster spec summary
                type: object
                properties:
                    cloudConfig:
                        $ref: '#/definitions/v1CloudConfigMeta'
                    cloudaccount:
                        $ref: '#/definitions/v1CloudAccountMeta'
                    clusterProfileTemplate:
                        $ref: '#/definitions/v1ClusterProfileTemplateMeta'
                    clusterProfileTemplates:
                        items:
                            $ref: '#/definitions/v1ClusterProfileTemplateMeta'
                        type: array
            status:
                $ref: '#/definitions/v1SpectroClusterUidStatusSummary'
    v1FargateProfile:
        description: FargateProfile defines the desired state of FargateProfile
        type: object
        required:
            - name
        properties:
            additionalTags:
                description: AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the ones added by default.
                type: object
                additionalProperties:
                    type: string
            name:
                description: name specifies the profile name.
                type: string
            selectors:
                description: Selectors specify fargate pod selectors.
                type: array
                items:
                    $ref: '#/definitions/v1FargateSelector'
            subnetIds:
                description: SubnetIDs specifies which subnets are used for the auto scaling group of this nodegroup.
                type: array
                items:
                    type: string
    v1MachinePoolMeta:
        type: object
        properties:
            cloudType:
                $ref: '#/definitions/v1CloudType'
            healthy:
                description: number of healthy machines
                type: integer
                format: int32
                x-omitempty: false
            infraProfileTemplate:
                $ref: '#/definitions/v1ClusterProfileTemplateMeta'
            labels:
                type: array
                items:
                    type: string
                description: 'labels for this pool, example: master/worker, gpu, windows'
            size:
                description: size of the pool, number of machines
                type: integer
                format: int32
                x-omitempty: false
    v1ObjectMeta:
        properties:
            lastModifiedTimestamp:
                $ref: '#/definitions/v1Time'
            name:
                type: string
                description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
            resourceVersion:
                description: |-
                    An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                    Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                type: string
            annotations:
                type: object
                additionalProperties:
                    type: string
                description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
            deletionTimestamp:
                $ref: '#/definitions/v1Time'
            labels:
                description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                type: object
                additionalProperties:
                    type: string
            uid:
                description: |-
                    UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                    Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                type: string
            creationTimestamp:
                $ref: '#/definitions/v1Time'
            namespace:
                description: |-
                    Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                    Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                type: string
            selfLink:
                description: SelfLink is a URL representing this object. Populated by the system. Read-only.
                type: string
        description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
        type: object
    v1PackRef:
        description: PackRef server/name:tag to point to a pack PackRef is used when construct a ClusterProfile PackSpec is used for UI to render the parameters form ClusterProfile will not know inner details of a pack ClusterProfile only contain pack name:tag, and the param values user entered for it
        type: object
        required:
            - layer
            - name
        properties:
            manifests:
                type: array
                items:
                    $ref: '#/definitions/v1ObjectReference'
            packUid:
                description: PackUID is Hubble packUID, not palette Pack.UID It is used by Hubble only.
                type: string
            presets:
                items:
                    $ref: '#/definitions/v1PackPreset'
                type: array
            registryUid:
                description: pack registry uid
                type: string
            inValidReason:
                type: string
            layer:
                type: string
                enum:
                    - kernel
                    - os
                    - k8s
                    - cni
                    - csi
                    - addon
            version:
                description: pack version
                type: string
            digest:
                description: digest is used to specify the version should be installed by palette when pack upgrade available, change this digest to trigger upgrade
                type: string
            isInvalid:
                type: boolean
                description: pack is invalid when the associated tag is deleted from the registry
            name:
                description: pack name
                type: string
            schema:
                type: array
                items:
                    $ref: '#/definitions/v1PackSchema'
            tag:
                description: pack tag
                type: string
            annotations:
                description: Annotations is used to allow packref to add more arbitrary information one example is to add git reference for values.yaml
                type: object
                additionalProperties:
                    type: string
            server:
                description: pack registry server or helm repo
                type: string
            type:
                description: type of the pack
                type: string
                enum:
                    - spectro
                    - helm
                    - manifest
            values:
                description: values represents the values.yaml used as input parameters either Params OR Values should be used, not both If both applied at the same time, will only use Values
                type: string
            params:
                additionalProperties:
                    type: string
                description: params passed as env variables to be consumed at installation time
                type: object
    v1AwsNic:
        description: AWS network interface
        type: object
        properties:
            index:
                type: integer
                format: int8
            privateIPs:
                items:
                    type: string
                type: array
            publicIp:
                type: string
    v1ResourceReference:
        type: object
        required:
            - uid
        properties:
            kind:
                type: string
            name:
                type: string
            uid:
                type: string
    v1SystemHealthPing:
        type: object
        properties:
            msg:
                type: string
    l1:
        description: Auth token response
        type: object
        properties:
            l2:
                $ref: '#/definitions/l2'
            name:
                type: string
            arr:
                $ref: '#/definitions/arrSpec'
    v1ComputeMetrics:
        description: Compute metrics
        type: object
        properties:
            lastUpdatedTime:
                $ref: '#/definitions/v1Time'
            limit:
                type: number
                x-omitempty: false
            request:
                type: number
                x-omitempty: false
            total:
                type: number
                x-omitempty: false
            unit:
                type: string
            usage:
                type: number
                x-omitempty: false
    v1CloudConfigMeta:
        type: object
        properties:
            cloudType:
                $ref: '#/definitions/v1CloudType'
            machinePools:
                description: Machine pool meta information
                type: array
                items:
                    $ref: '#/definitions/v1MachinePoolMeta'
    v1LoadBalancerService:
        properties:
            name:
                description: name of the loadbalancer service
                type: string
            ports:
                description: port this service exposed
                type: array
                items:
                    $ref: '#/definitions/v1ServicePort'
            host:
                description: IP or Host from svc.Status.LoadBalancerStatus.Ingress
                type: string
    v1SpectroClusterHealthCondition:
        description: Spectro cluster health condition
        properties:
            message:
                type: string
            relatedObject:
                $ref: '#/definitions/v1RelatedObject'
            type:
                type: string
    v1CloudAccountMeta:
        properties:
            uid:
                type: string
            name:
                type: string
        description: Cloud account meta information
        type: object
    v1ClusterProfileTemplate:
        description: ClusterProfileTemplate contains details of a clusterprofile definition
        type: object
        properties:
            version:
                format: int32
                description: Deprecated. Use profileVersion
                type: integer
            packServerRefs:
                description: PackServerRefs is only used on Hubble side it is reference to pack registry servers which PackRef belongs to in hubble, pack server is a top level object, so use a reference to point to it packs within a clusterprofile can come from different pack servers, so this is an array
                type: array
                items:
                    $ref: '#/definitions/v1ObjectReference'
            packServerSecret:
                description: This secret is used only on Palette side use case is similar  to k8s image pull secret this single secret internally should contains all the pack servers in PackServerRefs if empty, means no credential is needed to access the pack server For spectro saas, Ally will set this field before pass to palette
                type: string
            packs:
                description: Packs definitions here are final definitions. If ClonedFrom and ParamsOverwrite is present, then Packs are the final merge result of ClonedFrom and ParamsOverwrite So orchestration engine will just take the Packs and do the work, no need to worry about parameters merge
                type: array
                items:
                    $ref: '#/definitions/v1PackRef'
            profileVersion:
                description: version start from 1.0.0, matching the index of ClusterProfileSpec.Versions[] will be used by clusterSpec to identify which version is applied to the cluster
                type: string
            type:
                type: string
            uid:
                type: string
            cloudType:
                $ref: '#/definitions/v1CloudType'
            name:
                type: string
    v1ListMetaData:
        description: ListMeta describes metadata for the resource listing
        type: object
        properties:
            continue:
                x-omitempty: false
                description: Next token for the pagination. Next token is equal to empty string indicates end of result set.
                type: string
            count:
                description: Total count of the resources which might change during pagination based on the resources addition or deletion
                type: integer
                x-omitempty: false
            limit:
                description: Number of records feteched
                type: integer
                x-omitempty: false
            offset:
                description: The next offset for the pagination. Starting index for which next request will be placed.
                type: integer
                x-omitempty: false
    v1CloudMachineStatus:
        properties:
            health:
                $ref: '#/definitions/v1MachineHealth'
            instanceState:
                type: string
                enum:
                    - Pending
                    - Provisioning
                    - Provisioned
                    - Running
                    - Deleting
                    - Deleted
                    - Failed
                    - Unknown
        description: cloud machine status
        type: object
    v1CloudType:
        type: string
        default: all
        enum:
            - all
            - aws
            - azure
            - gcp
            - vsphere
            - openstack
            - maas
            - nested
            - baremetal
            - eks
            - aks
            - edge
            - edge-native
            - libvirt
            - tencent
            - tke
            - coxedge
            - generic
    v1EksCloudConfig:
        description: EksCloudConfig is the Schema for the ekscloudconfigs API
        properties:
            spec:
                $ref: '#/definitions/v1EksCloudConfigSpec'
            apiVersion:
                description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
            kind:
                type: string
                description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            metadata:
                $ref: '#/definitions/v1ObjectMeta'
    v1UserToken:
        description: Auth token response
        type: object
        properties:
            Authorization:
                type: string
    v1ClusterImport:
        type: object
        properties:
            importLink:
                description: import link to download and install ally-lite, palette-lite
                type: string
            isBrownfield:
                description: Deprecated. Use the 'spec.clusterType'
                type: boolean
                x-omitempty: false
            state:
                description: cluster import status
                type: string
    v1EksCloudConfigSpec:
        description: EksCloudConfigSpec defines the cloud configuration input by user
        type: object
        properties:
            cloudAccountRef:
                $ref: '#/definitions/v1ObjectReference'
            clusterConfig:
                $ref: '#/definitions/v1EksClusterConfig'
            fargateProfiles:
                items:
                    $ref: '#/definitions/v1FargateProfile'
                type: array
            machinePoolConfig:
                type: array
                items:
                    $ref: '#/definitions/v1EksMachinePoolConfig'
    v1Event:
        properties:
            involvedObject:
                $ref: '#/definitions/v1ObjectReference'
            message:
                type: string
            metadata:
                $ref: '#/definitions/v1ObjectMeta'
            reason:
                type: string
            relatedObject:
                $ref: '#/definitions/v1RelatedObject'
            severity:
                type: string
            source:
                $ref: '#/definitions/v1EventSource'
        description: Event information organized by tags
        type: object
    v1MachineHealthCondition:
        description: Machine health condition
        type: object
        properties:
            message:
                type: string
            reason:
                type: string
            status:
                type: string
            type:
                type: string
    v1SpectroClusterAddOnServiceSummary:
        description: Spectro cluster status summary
        properties:
            name:
                type: string
            endpoint:
                type: string
    arrSpec:
        description: Auth token response
        type: object
        properties:
            authType:
                type: array
                items:
                    type: string
    v1CloudCost:
        description: Cloud cost information
        type: object
        properties:
            compute:
                type: number
                format: float64
                x-omitempty: false
            storage:
                type: number
                format: float64
                x-omitempty: false
            total:
                x-omitempty: false
                type: number
                format: float64
    v1ClusterMetaSpecLocation:
        description: Cluster location information
        type: object
        properties:
            regionCode:
                type: string
            regionName:
                type: string
            coordinates:
                type: array
                items:
                    format: float64
                    type: number
            countryCode:
                type: string
            countryName:
                type: string
    v1KubeMeta:
        type: object
        properties:
            hasKubeConfig:
                x-omitempty: false
                type: boolean
            hasKubeConfigClient:
                type: boolean
                x-omitempty: false
            hasManifest:
                type: boolean
                x-omitempty: false
            kubernetesVersion:
                type: string
        description: Spectro cluster kube meta
    v1Upgrades:
        description: Upgrades represent the reason of the last upgrade that took place
        type: object
        properties:
            reason:
                type: array
                items:
                    type: string
            timestamp:
                $ref: '#/definitions/v1Time'
    spec:
        description: Auth token response
        type: object
        properties:
            authType:
                type: string
            isEnabled:
                type: boolean
            isLocked:
                type: boolean
            isOwner:
                type: boolean
    v1ClusterPackStatus:
        type: object
        properties:
            version:
                type: string
            endTime:
                $ref: '#/definitions/v1Time'
            name:
                type: string
            profileUid:
                type: string
            type:
                type: string
            condition:
                $ref: '#/definitions/v1ClusterCondition'
            manifests:
                items:
                    $ref: '#/definitions/v1ClusterPackManifestStatus'
                type: array
            services:
                type: array
                items:
                    $ref: '#/definitions/v1LoadBalancerService'
            startTime:
                $ref: '#/definitions/v1Time'
    v1EksClusterConfig:
        description: EksClusterConfig defines EKS specific config
        type: object
        required:
            - region
        properties:
            encryptionConfig:
                $ref: '#/definitions/v1EncryptionConfig'
            endpointAccess:
                $ref: '#/definitions/v1EksClusterConfigEndpointAccess'
            region:
                type: string
                description: The AWS Region the cluster lives in.
            sshKeyName:
                description: SSHKeyName specifies which EC2 SSH key can be used to access machines.
                type: string
            vpcId:
                description: VPC Id to deploy cluster into should have one public and one private subnet for the the cluster creation, this field is optional, If VPC Id is not provided a fully managed VPC will be created
                type: string
            addons:
                description: Addons defines the EKS addons to enable with the EKS cluster. This may be required for brownfield clusters
                type: array
                items:
                    $ref: '#/definitions/v1EksAddon'
            bastionDisabled:
                description: BastionDisabled is the option to disable bastion node
                type: boolean
            controlPlaneLoadBalancer:
                description: ControlPlaneLoadBalancer specifies how API server elb will be configured, this field is optional, not provided, "", default => "Internet-facing" "Internet-facing" => "Internet-facing" "internal" => "internal" For spectro saas setup we require to talk to the apiserver from our cluster so ControlPlaneLoadBalancer should be "", not provided or "Internet-facing"
                type: string
    v1FargateSelector:
        description: FargateSelector specifies a selector for pods that should run on this fargate pool
        type: object
        required:
            - namespace
        properties:
            labels:
                description: Labels specifies which pod labels this selector should match.
                type: object
                additionalProperties:
                    type: string
            namespace:
                description: Namespace specifies which namespace this selector should match.
                type: string
    v1SpcApply:
        type: object
        properties:
            canBeApplied:
                description: If it is true then Agent can apply the changes to the palette
                type: boolean
                x-omitempty: false
            lastModifiedTime:
                $ref: '#/definitions/v1Time'
            patchAppliedTime:
                $ref: '#/definitions/v1Time'
            actionType:
                type: string
                enum:
                    - DownloadAndInstall
                    - DownloadAndInstallLater
    v1Time:
        format: date-time
        description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
        type: string
    l3:
        description: Auth token response
        type: object
        properties:
            arr:
                $ref: '#/definitions/arrSpec'
            l4:
                $ref: '#/definitions/l4'
            name:
                type: string
    v1ClusterProfileTemplateMeta:
        description: Cluster profile template meta information
        type: object
        properties:
            type:
                type: string
            uid:
                type: string
            version:
                type: integer
                format: int32
            cloudType:
                $ref: '#/definitions/v1CloudType'
            name:
                type: string
            packs:
                type: array
                items:
                    $ref: '#/definitions/v1PackRef'
    v1EksClusterConfigEndpointAccess:
        description: EndpointAccess specifies how control plane endpoints are accessible
        type: object
        properties:
            private:
                description: Private points VPC-internal control plane access to the private endpoint
                type: boolean
            public:
                description: Public controls whether control plane endpoints are publicly accessible
                type: boolean
            publicCIDRs:
                items:
                    type: string
                description: PublicCIDRs specifies which blocks can access the public endpoint
                type: array
    v1EventSource:
        description: Event source info
        type: object
        properties:
            component:
                type: string
            host:
                type: string
    metadata:
        properties:
            age:
                type: string
            dob:
                $ref: '#/definitions/v1Time'
            l1:
                $ref: '#/definitions/l1'
            name:
                type: string
        description: Auth token response
        type: object
    status:
        properties:
            creationTime:
                $ref: '#/definitions/v1Time'
            lastLogin:
                $ref: '#/definitions/v1Time'
            modificationTime:
                $ref: '#/definitions/v1Time'
        description: Auth token response
        type: object
    v1MachineHealth:
        description: Machine health state
        type: object
        properties:
            conditions:
                type: array
                items:
                    $ref: '#/definitions/v1MachineHealthCondition'
            state:
                type: string
    v1ObjectReference:
        description: ObjectReference contains enough information to let you inspect or modify the referred object.
        type: object
        properties:
            uid:
                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                type: string
            apiVersion:
                type: string
                description: API version of the referent.
            fieldPath:
                description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.'
                type: string
            kind:
                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
            name:
                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                type: string
            namespace:
                description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                type: string
            resourceVersion:
                description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                type: string
    v1PackPreset:
        description: PackPreset defines the preset pack values
        type: object
        properties:
            add:
                type: string
                x-omitempty: false
            displayName:
                type: string
                x-omitempty: false
            group:
                type: string
                x-omitempty: false
            name:
                type: string
                x-omitempty: false
            remove:
                type: array
                items:
                    type: string
                x-omitempty: false
    v1PackSchema:
        description: PackSchema defines the schema definition, hints for the pack values
        type: object
        properties:
            readonly:
                type: boolean
                x-omitempty: false
            regex:
                type: string
                x-omitempty: false
            required:
                type: boolean
                x-omitempty: false
            type:
                type: string
                x-omitempty: false
            format:
                type: string
                x-omitempty: false
            hints:
                type: array
                items:
                    type: string
                x-omitempty: false
            listOptions:
                type: array
                items:
                    type: string
                x-omitempty: false
            name:
                type: string
                x-omitempty: false
    v1Taint:
        description: Taint
        type: object
        properties:
            effect:
                type: string
                enum:
                    - NoSchedule
                    - PreferNoSchedule
                    - NoExecute
            key:
                description: The taint key to be applied to a node
                type: string
            timeAdded:
                $ref: '#/definitions/v1Time'
            value:
                description: The taint value corresponding to the taint key.
                type: string
